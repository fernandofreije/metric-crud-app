{
    "openapi": "3.0.3",
    "info": {
        "title": "Metric Crud App",
        "description": "Basic API for test proyect\n\nSome useful links:\n- [Repository](https://github.com/fernandofreije/metric-crud-app/tree/main/metric-crud-app-backend)",
        "contact": {
            "email": "ffreijefuente@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://metric-crud-app-backend.onrender.com/"
        }
    ],
    "paths": {
        "/metric": {
            "post": {
                "tags": [
                    "metric"
                ],
                "summary": "Add a new metric",
                "description": "Add a new metric",
                "requestBody": {
                    "description": "Add a new metric",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metric"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metric"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metric"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            },
            "get": {
                "tags": [
                    "metric"
                ],
                "summary": "Returns all the metrics",
                "description": "Returns a all the metrics metric",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metric"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metric/{metricId}": {
            "get": {
                "tags": [
                    "metric"
                ],
                "summary": "Find metric by ID",
                "description": "Returns a single metric",
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "ID of metric to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metric"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Metric not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Metric": {
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "an uuid"
                    },
                    "name": {
                        "type": "string",
                        "example": "some name"
                    },
                    "value": {
                        "type": "integer",
                        "example": 2
                    },
                    "timestamp": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "metric"
                }
            }
        }
    }
}